version: '2'
services:
    traefik:
        image: traefik:v2.3
        command:
            - "--api=true"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.consulCatalog=true"
            - "--providers.consulCatalog.endpoint.address=consul:8500"
            - "--providers.consulCatalog.exposedByDefault=false"
            - "--providers.consulCatalog.stale=false"
            - "--providers.consulCatalog.prefix=traefik"
            - "--log.level=DEBUG"
        ports:
            - 80:80
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - backend
    consul:
        image: consul:1.8.0
        ports:
            - 8301:8301
            - 8302:8302
            - 8300:8300
            - 8500:8500
            - 8600:53/udp
        command: consul agent -server -dev -client=0.0.0.0 -ui -bootstrap -log-level debug
        networks:
            - backend
    portainer:
        image: portainer/portainer:1.24.0
        command: -H unix:///var/run/docker.sock
        restart: always
        ports:
            - 9000:9000
            - 8000:8000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock            
    demo-service-v1:
        image: markoniemi/demo-service
        environment:
            - CONSUL_HOST=${CONSUL_HOST}
            - CONSUL_PORT=${CONSUL_PORT}
            - VERSION=${VERSION}
            - PATH_PREFIX=${PATH_PREFIX}
        networks:
            - backend
    demo-service-v2:
        image: markoniemi/demo-service
        environment:
            - CONSUL_HOST=${CONSUL_HOST}
            - CONSUL_PORT=${CONSUL_PORT}
            - VERSION=v2
            - PATH_PREFIX=/demo/v2
        networks:
            - backend
    demo-client:
        image: markoniemi/demo-client
        environment:
            - CONSUL_HOST=${CONSUL_HOST}
            - CONSUL_PORT=${CONSUL_PORT}
            - VERSION=${VERSION}
            - PATH_PREFIX=/client/v1
        networks:
            - backend
networks:
    backend:
        driver: bridge
